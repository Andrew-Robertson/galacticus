name: Benchmarks
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths:
      - 'Makefile'
      - 'source/**'
      - 'source/Bivar/**'
      - 'source/ISO_Varying_String/**'
      - 'source/gslODEInitVal2/**'
      - 'source/NSWC/**'
      - 'source/pFq/**'
      - 'source/gslSpecFuncApprox/**'
      - 'source/FFTlog/**'
      - 'perl/**'
      - 'perl/File/**'
      - 'perl/Galacticus/**'
      - 'perl/Galacticus/Launch/**'
      - 'perl/Galacticus/Constraints/**'
      - 'perl/Galacticus/Build/**'
      - 'perl/Galacticus/Build/Components/**'
      - 'perl/Galacticus/Build/Components/Classes/**'
      - 'perl/Galacticus/Build/Components/Implementations/**'
      - 'perl/Galacticus/Build/Components/Properties/**'
      - 'perl/Galacticus/Build/Components/TreeNodes/**'
      - 'perl/Galacticus/Build/Components/Hierarchy/**'
      - 'perl/Galacticus/Build/SourceTree/**'
      - 'perl/Galacticus/Build/SourceTree/Parse/**'
      - 'perl/Galacticus/Build/SourceTree/Analyze/**'
      - 'perl/Galacticus/Build/SourceTree/Process/**'
      - 'perl/Galacticus/Build/SourceTree/Process/FunctionClass/**'
      - 'perl/List/**'
      - 'perl/Sort/**'
      - 'perl/LaTeX/**'
      - 'perl/IO/**'
      - 'perl/IO/Compress/**'
      - 'perl/System/**'
      - 'perl/Fortran/**'
      - 'scripts/build/**'
      - 'schema/**'
defaults:
  run:
    shell: bash
concurrency:
  group: benchmarks-${{ github.ref }}
  cancel-in-progress: true
jobs:
  Build-Executables:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Build the code
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          make -j2 Galacticus.exe
      - name: Upload executables
        uses: actions/upload-artifact@v2
        with:
          name: galacticus-exec
          path: '**.exe'
      - run: echo "This job's status is ${{ job.status }}."
  Dark-Matter-Only-Subhalos:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Install tools
        run: |
          apt -y update
          apt install -y time
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./benchmark-darkMatterOnlySubhalos.pl
          ./benchmark-darkMatterOnlySubhalos.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Dark matter-only subhalos benchmarks
          tool: 'customSmallerIsBetter'
          output-file-path: testSuite/outputs/benchmark_darkMatterOnlySubhalos.json
          fail-on-alert: true
          comment-on-alert: true
          alert-comment-cc-users: '@abensonca'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          benchmark-data-dir-path: dev/bench/darkMatterOnlySubhalos
          gh-pages-branch: gh-pages
          alert-threshold: 150%
          fail-threshold: 200%
          max-items-in-chart: 256
      - name: Push benchmark result
        run: |
          git checkout gh-pages
          git push --set-upstream origin gh-pages
        if: github.event_name != 'pull_request'
      - run: echo "This job's status is ${{ job.status }}."
  Milky-Way-Model:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Install tools
        run: |
          apt -y update
          apt install -y time
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./benchmark-milkyWay.pl
          ./benchmark-milkyWay.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Milky Way model benchmarks
          tool: 'customSmallerIsBetter'
          output-file-path: testSuite/outputs/benchmark_milkyWay.json
          fail-on-alert: true
          comment-on-alert: true
          alert-comment-cc-users: '@abensonca'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          benchmark-data-dir-path: dev/bench/milkyWayModel
          gh-pages-branch: gh-pages
          alert-threshold: 150%
          fail-threshold: 200%
          max-items-in-chart: 256
      - name: Push benchmark result
        run: |
          git checkout gh-pages
          git push --set-upstream origin gh-pages
        if: github.event_name != 'pull_request'
      - run: echo "This job's status is ${{ job.status }}."
