name: Profiling
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths:
      - 'Makefile'
      - 'source/**'
      - 'source/Bivar/**'
      - 'source/ISO_Varying_String/**'
      - 'source/gslODEInitVal2/**'
      - 'source/NSWC/**'
      - 'source/pFq/**'
      - 'source/gslSpecFuncApprox/**'
      - 'source/FFTlog/**'
      - 'perl/**'
      - 'perl/File/**'
      - 'perl/Galacticus/**'
      - 'perl/Galacticus/Launch/**'
      - 'perl/Galacticus/Constraints/**'
      - 'perl/Galacticus/Build/**'
      - 'perl/Galacticus/Build/Components/**'
      - 'perl/Galacticus/Build/Components/Classes/**'
      - 'perl/Galacticus/Build/Components/Implementations/**'
      - 'perl/Galacticus/Build/Components/Properties/**'
      - 'perl/Galacticus/Build/Components/TreeNodes/**'
      - 'perl/Galacticus/Build/Components/Hierarchy/**'
      - 'perl/Galacticus/Build/SourceTree/**'
      - 'perl/Galacticus/Build/SourceTree/Parse/**'
      - 'perl/Galacticus/Build/SourceTree/Analyze/**'
      - 'perl/Galacticus/Build/SourceTree/Process/**'
      - 'perl/Galacticus/Build/SourceTree/Process/FunctionClass/**'
      - 'perl/List/**'
      - 'perl/Sort/**'
      - 'perl/LaTeX/**'
      - 'perl/IO/**'
      - 'perl/IO/Compress/**'
      - 'perl/System/**'
      - 'perl/Fortran/**'
      - 'scripts/build/**'
      - 'schema/**'
defaults:
  run:
    shell: bash
concurrency:
  group: profiling-${{ github.ref }}
  cancel-in-progress: true
jobs:
  Build-Executables:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Build the code
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          make -j2 Galacticus.exe
      - name: Upload executables
        uses: actions/upload-artifact@v2
        with:
          name: galacticus-exec
          path: '**.exe'
      - run: echo "This job's status is ${{ job.status }}."
  Build-Executables-Instrumented:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Build the code
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          export GALACTICUS_FCFLAGS="$GALACTICUS_FCFLAGS -pg"
          export GALACTICUS_CFLAGS="$GALACTICUS_CFLAGS -pg"
          export GALACTICUS_CPPFLAGS="$GALACTICUS_CPPFLAGS -pg"
          make -j2 Galacticus.exe
      - name: Upload executables
        uses: actions/upload-artifact@v2
        with:
          name: galacticus-exec-inst
          path: '**.exe'
      - run: echo "This job's status is ${{ job.status }}."
  Dark-Matter-Only-Subhalos:
    runs-on: ubuntu-latest
    container:
      image: docker://galacticusorg/buildenv:latest
      options: --privileged
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Install tools
        run: |
          apt -y update
          apt install -y linux-tools-$(uname -r) linux-tools-generic bzip2
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          ./Galacticus.exe ./testSuite/parameters/benchmark_darkMatterOnlySubHalos.xml  
          perf record -g -e cycles --call-graph dwarf -F 500 -o ./testSuite/outputs/darkMatterOnlySubhalos.perf.data ./Galacticus.exe ./testSuite/parameters/benchmark_darkMatterOnlySubHalos.xml
          perf script -i ./testSuite/outputs/darkMatterOnlySubhalos.perf.data > ./testSuite/outputs/darkMatterOnlySubhalos.perf
          du -sh ./testSuite/outputs/darkMatterOnlySubhalos.perf
          bzip2 ./testSuite/outputs/darkMatterOnlySubhalos.perf
      - name: Update release
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./testSuite/outputs/darkMatterOnlySubhalos.perf.bz2
          release: bleeding-edge
          prerelease: true
          message: Bleeding edge release
          body: This release is updated to match the [latest revision](https://github.com/galacticusorg/galacticus/commit/HEAD) to Galacticus.
      - name: Update release tag
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: richardsimko/update-tag@v1
        with:
          tag_name: bleeding-edge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Milky-Way-Model:
    runs-on: ubuntu-latest
    container:
      image: docker://galacticusorg/buildenv:latest
      options: --privileged
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Install tools
        run: |
          apt -y update
          apt install -y linux-tools-$(uname -r) linux-tools-generic bzip2
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay.xml  
          perf record -g -e cycles --call-graph dwarf -F 100 -o ./testSuite/outputs/milkyWay.perf.data ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay.xml
          perf script -i ./testSuite/outputs/milkyWay.perf.data > ./testSuite/outputs/milkyWay.perf
          du -sh ./testSuite/outputs/milkyWay.perf
          bzip2 ./testSuite/outputs/milkyWay.perf
      - name: Update release
        if: ${{ steps.extract_branch.outputs.branch == 'master' }} 
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./testSuite/outputs/milkyWay.perf.bz2
          release: bleeding-edge
          prerelease: true
          message: Bleeding edge release
          body: This release is updated to match the [latest revision](https://github.com/galacticusorg/galacticus/commit/HEAD) to Galacticus.
      - name: Update release tag
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: richardsimko/update-tag@v1
        with:
          tag_name: bleeding-edge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Milky-Way-SIDM_Model:
    runs-on: ubuntu-latest
    container:
      image: docker://galacticusorg/buildenv:latest
      options: --privileged
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Install tools
        run: |
          apt -y update
          apt install -y linux-tools-$(uname -r) linux-tools-generic bzip2
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay_SIDM.xml  
          perf record -g -e cycles --call-graph dwarf -F 100 -o ./testSuite/outputs/milkyWay_SIDM.perf.data ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay_SIDM.xml
          perf script -i ./testSuite/outputs/milkyWay_SIDM.perf.data > ./testSuite/outputs/milkyWay_SIDM.perf
          du -sh ./testSuite/outputs/milkyWay_SIDM.perf
          bzip2 ./testSuite/outputs/milkyWay_SIDM.perf
      - name: Update release
        if: ${{ steps.extract_branch.outputs.branch == 'master' }} 
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./testSuite/outputs/milkyWay_SIDM.perf.bz2
          release: bleeding-edge
          prerelease: true
          message: Bleeding edge release
          body: This release is updated to match the [latest revision](https://github.com/galacticusorg/galacticus/commit/HEAD) to Galacticus.
      - name: Update release tag
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: richardsimko/update-tag@v1
        with:
          tag_name: bleeding-edge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Dark-Matter-Only-Subhalos-GProf:
    runs-on: ubuntu-latest
    container:
      image: docker://galacticusorg/buildenv:latest
      options: --privileged
    needs: Build-Executables-Instrumented
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec-inst
      - name: Install tools
        run: |
          apt -y update
          apt install -y bzip2
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          ./Galacticus.exe ./testSuite/parameters/benchmark_darkMatterOnlySubHalos.xml  
          rm gmon.out
          ./Galacticus.exe ./testSuite/parameters/benchmark_darkMatterOnlySubHalos.xml
          gprof ./Galacticus.exe gmon.out > ./testSuite/outputs/darkMatterOnlySubhalos.gprof
          du -sh ./testSuite/outputs/darkMatterOnlySubhalos.gprof
          bzip2 ./testSuite/outputs/darkMatterOnlySubhalos.gprof
      - name: Update release
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./testSuite/outputs/darkMatterOnlySubhalos.gprof.bz2
          release: bleeding-edge
          prerelease: true
          message: Bleeding edge release
          body: This release is updated to match the [latest revision](https://github.com/galacticusorg/galacticus/commit/HEAD) to Galacticus.
      - name: Update release tag
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: richardsimko/update-tag@v1
        with:
          tag_name: bleeding-edge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Milky-Way-GProf:
    runs-on: ubuntu-latest
    container:
      image: docker://galacticusorg/buildenv:latest
      options: --privileged
    needs: Build-Executables-Instrumented
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec-inst
      - name: Install tools
        run: |
          apt -y update
          apt install -y bzip2
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay.xml  
          rm gmon.out
          ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay.xml
          gprof ./Galacticus.exe gmon.out > ./testSuite/outputs/milkyWay.gprof
          du -sh ./testSuite/outputs/milkyWay.gprof
          bzip2 ./testSuite/outputs/milkyWay.gprof
      - name: Update release
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./testSuite/outputs/milkyWay.gprof.bz2
          release: bleeding-edge
          prerelease: true
          message: Bleeding edge release
          body: This release is updated to match the [latest revision](https://github.com/galacticusorg/galacticus/commit/HEAD) to Galacticus.
      - name: Update release tag
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: richardsimko/update-tag@v1
        with:
          tag_name: bleeding-edge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Milky-Way-SIDM-GProf:
    runs-on: ubuntu-latest
    container:
      image: docker://galacticusorg/buildenv:latest
      options: --privileged
    needs: Build-Executables-Instrumented
    steps:
      - run: echo "The job was automatically triggered by a $githubevent_name event."
      - run: echo "This job is now running on a $runneros server."
      - run: echo "The name of the branch is $github and the repository is $githubrepository."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The $githubrepository repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec-inst
      - name: Install tools
        run: |
          apt -y update
          apt install -y bzip2
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run benchmark
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay_SIDM.xml  
          rm gmon.out
          ./Galacticus.exe ./testSuite/parameters/benchmark_milkyWay_SIDM.xml
          gprof ./Galacticus.exe gmon.out > ./testSuite/outputs/milkyWay_SIDM.gprof
          du -sh ./testSuite/outputs/milkyWay_SIDM.gprof
          bzip2 ./testSuite/outputs/milkyWay_SIDM.gprof
      - name: Update release
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./testSuite/outputs/milkyWay_SIDM.gprof.bz2
          release: bleeding-edge
          prerelease: true
          message: Bleeding edge release
          body: This release is updated to match the [latest revision](https://github.com/galacticusorg/galacticus/commit/HEAD) to Galacticus.
      - name: Update release tag
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: richardsimko/update-tag@v1
        with:
          tag_name: bleeding-edge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
