name: Test-Misc
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths:
      - 'Makefile'
      - 'source/**'
      - 'source/Bivar/**'
      - 'source/ISO_Varying_String/**'
      - 'source/gslODEInitVal2/**'
      - 'source/NSWC/**'
      - 'source/pFq/**'
      - 'source/gslSpecFuncApprox/**'
      - 'source/FFTlog/**'
      - 'perl/**'
      - 'perl/File/**'
      - 'perl/Galacticus/**'
      - 'perl/Galacticus/Launch/**'
      - 'perl/Galacticus/Constraints/**'
      - 'perl/Galacticus/Build/**'
      - 'perl/Galacticus/Build/Components/**'
      - 'perl/Galacticus/Build/Components/Classes/**'
      - 'perl/Galacticus/Build/Components/Implementations/**'
      - 'perl/Galacticus/Build/Components/Properties/**'
      - 'perl/Galacticus/Build/Components/TreeNodes/**'
      - 'perl/Galacticus/Build/Components/Hierarchy/**'
      - 'perl/Galacticus/Build/SourceTree/**'
      - 'perl/Galacticus/Build/SourceTree/Parse/**'
      - 'perl/Galacticus/Build/SourceTree/Analyze/**'
      - 'perl/Galacticus/Build/SourceTree/Process/**'
      - 'perl/Galacticus/Build/SourceTree/Process/FunctionClass/**'
      - 'perl/List/**'
      - 'perl/Sort/**'
      - 'perl/LaTeX/**'
      - 'perl/IO/**'
      - 'perl/IO/Compress/**'
      - 'perl/System/**'
      - 'perl/Fortran/**'
      - 'scripts/build/**'
      - 'schema/**'
defaults:
  run:
    shell: bash
concurrency:
  group: test-misc-${{ github.ref }}
  cancel-in-progress: true
jobs:
  Build-Executables:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Build the code
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          make -j2 Galacticus.exe
      - name: Upload executables
        uses: actions/upload-artifact@v2
        with:
          name: galacticus-exec
          path: '**.exe'
      - run: echo "This job's status is ${{ job.status }}."
  Test-Allowed-Parameters:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-allowed-parameters.pl
          ./test-allowed-parameters.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Bar-Instability:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-bar-instability.pl
          ./test-bar-instability.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Bolshoi-Tree-Builder:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-Bolshoi-tree-builder.pl
          ./test-Bolshoi-tree-builder.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Branchless-Trees:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-branchlessTrees.pl
          ./test-branchlessTrees.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Branch-Subsampling:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-branchSubsampling.pl
          ./test-branchSubsampling.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-CGM-Mass-Cooled:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-CGM-mass-cooled.pl
          ./test-CGM-mass-cooled.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Concentration-Ludlow2016:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-concentration-Ludlow2016.pl
          ./test-concentration-Ludlow2016.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Constraint-Deterministic-Spins:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-constraint-deterministic-spins.pl
          ./test-constraint-deterministic-spins.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Constraint-Mass-Function:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-constraint-mass-function.pl
          ./test-constraint-mass-function.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Extract-Directives:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH/testSuite
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./test-extract-directives.pl
          ./test-extract-directives.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Fortran-Utils:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH/testSuite
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./test-fortran-utils.pl
          ./test-fortran-utils.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Halo-Mass-Functions:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-halo-mass-functions.pl
          ./test-halo-mass-functions.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Inactive-Luminosities:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-inactive_luminosities.pl
          ./test-inactive_luminosities.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Interoutput-Star-Formation-Rate:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
          echo "GALACTICUS_ANALYSIS_PERL_PATH=$GITHUB_WORKSPACE/analysis-perl" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-interoutput-star-formation-rate.pl
          ./test-interoutput-star-formation-rate.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Mass-Host-Maximum:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
          echo "GALACTICUS_ANALYSIS_PERL_PATH=$GITHUB_WORKSPACE/analysis-perl" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-mass-host-maximum.pl
          ./test-mass-host-maximum.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Millennium-Tree-Builder:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-Millennium-tree-builder.pl
          ./test-Millennium-tree-builder.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Output:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-output.pl
          ./test-output.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Output-Tree-Contiguousity:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-output-tree-contiguousity.pl
          ./test-output-tree-contiguousity.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Parameter-Validation:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH/testSuite
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./test-parameter-validation.pl
          ./test-parameter-validation.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Perl-Modules:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - name: Check out repository analysis-perl
        uses: actions/checkout@v2
        with:
          repository: galacticusorg/analysis-perl
          path: analysis-perl
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
          echo "GALACTICUS_ANALYSIS_PERL_PATH=$GITHUB_WORKSPACE/analysis-perl" >> $GITHUB_ENV
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH/testSuite
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./test-perl-modules.pl
          ./test-perl-modules.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Reproducibility:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-reproducibility.pl
          ./test-reproducibility.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Split-Forests:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-splitForests.pl
          ./test-splitForests.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Star-Formation-Histories-Adaptive:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-star-formation-histories-adaptive.pl
          ./test-star-formation-histories-adaptive.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-State-Restore:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-stateRestore.pl
          ./test-stateRestore.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Stellar-Mass-Weighted-Ages:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-stellar-mass-weighted-ages.pl
          ./test-stellar-mass-weighted-ages.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Tidal-Tracks:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-tidalTracks.pl
          ./test-tidalTracks.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-galacticStructureState-Deallocate-Bug:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-galacticStructureStateDeallocateBug.pl
          ./test-galacticStructureStateDeallocateBug.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Inactive-Numerics:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-inactiveNumerics.pl
          ./test-inactiveNumerics.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Impulsive-Heating:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-impulsiveHeating.pl
          ./test-impulsiveHeating.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
  Test-Halo-Triaxiality:
    runs-on: ubuntu-latest
    container: docker://galacticusorg/buildenv:latest
    needs: Build-Executables
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check out repository datasets
        uses: actions/checkout@v2      
        with:
          repository: galacticusorg/datasets
          path: datasets
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: "Set environmental variables"
        run: |
          echo "GALACTICUS_EXEC_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "GALACTICUS_DATA_PATH=$GITHUB_WORKSPACE/datasets" >> $GITHUB_ENV
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: galacticus-exec
      - name: Create test suite output directory
        run: mkdir -p $GALACTICUS_EXEC_PATH/testSuite/outputs
      - name: Run test
        run: |
          cd $GALACTICUS_EXEC_PATH
          git config --global --add safe.directory $GALACTICUS_EXEC_PATH
          chmod u=wrx ./Galacticus.exe
          cd testSuite
          chmod u=wrx ./test-haloTriaxiality.pl
          ./test-haloTriaxiality.pl 2>&1 | tee test.log
          ! grep -q FAIL test.log
      - run: echo "This job's status is ${{ job.status }}."
