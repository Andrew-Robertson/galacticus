<?xml version="1.0" encoding="UTF-8"?>
<!-- Emission lines output example. -->
<parameters>
  <formatVersion>2</formatVersion>
  <version>0.9.4</version>

  <!-- Include required parameters -->
  <xi:include href="parameters/reference/darkMatterParticleCDM.xml"       xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/cosmology.xml"                   xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/powerSpectrum.xml"               xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/structureFormation.xml"          xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/darkMatterHalosProfile.xml"      xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/darkMatterHalosTidalHeating.xml" xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/darkMatterHalosStructure.xml"    xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/subhaloOrbits.xml"               xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
  <xi:include href="parameters/reference/evolutionGalaxyFormationMYt.xml"    xpointer="xpointer(parameters/*)" xmlns:xi="http://www.w3.org/2001/XInclude"/>

  <!-- Set verbosity to standard level. -->
  <verbosityLevel value="working"/>

  <!-- Set up the tasks to perform. -->
  <task value="evolveForests">
    <!-- Evolve merger tree forests. -->
  </task>

  <!-- Set up work sharing. This controls which threads/processes will compute each tree:                                            -->
  <!-- * "FCFS" (first-come-first-served) uses a synchronized MPI counter such that the first available thread/process takes the
         next available tree. This is in principle the most efficient approach, except for communication overheads. We use a hybrid
         approach where MPI communication is limited (as much as possible) to a single thread per process.                           -->
  <!-- * "cyclic" - trees are distributed to threads/processes in a round-robin manner - this avoids any communication but the total
         time will be limited by the slowest threads/trees.                                                                          -->
  <!-- In general FCFS seems to perform much better, providing that we set doPing=true to that the rank=0 process regularly pings    -->
  <!-- the shared MPI counter to ensure it progresses.                                                                                 -->
  <evolveForestsWorkShare value="FCFS">
    <doPing         value="true"/>
    <reportWaitTime value="true"/>
  </evolveForestsWorkShare>

  <!-- Merger tree building options --> 
  <mergerTreeBuildMasses value="sampledDistributionUniform">
    <massTreeMinimum value="1.0e10"/>
    <massTreeMaximum value="3.0e11"/>
    <treesPerDecade  value="100"   />
  </mergerTreeBuildMasses>
  <mergerTreeBuildMassDistribution value="powerLaw">
    <exponent value="1.0"/>
  </mergerTreeBuildMassDistribution>
  
  <!-- Merger tree building options --> 
  <mergerTreeConstructor value="filter">
    <!-- Use a 'filter' constructor here. It will default to an 'always' filter (making it inactive), but this allows models to
         impose a filter if they wish to do so. -->
    <mergerTreeConstructor value="build">
      <redshiftBase value="0.0"/>
    </mergerTreeConstructor>
  </mergerTreeConstructor>
  <mergerTreeBuilder     value="cole2000">
    <!-- The Cole et al. (2000) merger tree building algorithm is used. The "interval stepping" optimization from Appendix A -->
    <!-- of Benson, Ludlow, & Cole (2019, MNRAS, 485, 5010; https://ui.adsabs.harvard.edu/abs/2019MNRAS.485.5010B) is used   -->
    <!-- to speed up tree building.                                                                                          -->
    <accretionLimit     value="  0.1"/>
    <mergeProbability   value="  0.1"/>
    <redshiftMaximum    value="100.0"/>
    <branchIntervalStep value="true" />
  </mergerTreeBuilder>
  <mergerTreeBranchingProbability value="parkinsonColeHelly">
    <G0                 value="+0.57"/>
    <gamma1             value="+0.38"/>
    <gamma2             value="-0.01"/>
    <accuracyFirstOrder value="+0.10"/>
  </mergerTreeBranchingProbability>

  <!-- Halo mass resolution -->
  <mergerTreeMassResolution value="scaled">
    <massResolutionMinimum    value="2.5e9"/>
    <massResolutionFractional value="8.33e-5"/>
  </mergerTreeMassResolution>

  <!-- Emission line calculations -->
  <luminosityFilter         value="emissionLineFilters"/>
  <luminosityType           value="rest               "/>
  <luminosityRedshift       value="all                "/>
  <luminosityPostprocessSet value="default            "/>
  <elementsToTrack value="O"/>
  <!-- Output epochs -->
  <outputTimes value="list">
    <!-- Additional redshifts can be added to this list to generate more outputs. -->
    <redshifts value="0.0 0.05"/>
  </outputTimes>

  <!-- Output -->
  <mergerTreeOutputter value="multi">
      <mergerTreeOutputter value="standard"/>
      <mergerTreeOutputter value="analyzer"/>
  </mergerTreeOutputter>

   <nodePropertyExtractor value="luminosityEmissionLine">
      <lineNames value="balmerAlpha6565"/>
      <component value="disk"/>
      <toleranceRelative value="1.0d-2"/>
    </nodePropertyExtractor>


  <!-- Gravitational lensing -->
  <gravitationalLensing value="null"/>

  <!-- Emission line luminosity functions -->
    <outputAnalysis value="luminosityFunctionGunawardhana2013SDSS"> <!-- Analysis #14 -->
      <randomErrorMinimum value="+0.1"/>
      <randomErrorMaximum value="+0.1"/>
      <randomErrorPolynomialCoefficient value="+0.1"/>
      <systematicErrorPolynomialCoefficient value="-0.00668698203006482 -0.00098878419875252"/>
      <sizeSourceLensing value="2.0e-3"/>
      <depthOpticalISMCoefficient value="0.0"/>
    </outputAnalysis>

  <!-- Output file -->
  <outputFileName value="/central/scratch/sweeraso/outputs/emissionLines_100_test.hdf5"/>

</parameters>


